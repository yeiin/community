plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ktb'
version = '0.0.1-SNAPSHOT'
description = 'community service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//security
	implementation 'org.springframework.security:spring-security-crypto:6.3.3'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	//annotation
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//bcrypt
	implementation 'at.favre.lib:bcrypt:0.10.2'

	//mysql
	implementation 'mysql:mysql-connector-java:8.0.33'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//code
	implementation 'commons-codec:commons-codec:1.19.0'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//scrimage
	implementation "com.sksamuel.scrimage:scrimage-core:4.0.32"
	implementation "com.sksamuel.scrimage:scrimage-formats-extra:4.0.32"
	implementation "com.sksamuel.scrimage:scrimage-webp:4.0.32"

	//io
	implementation 'commons-io:commons-io:2.6'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}